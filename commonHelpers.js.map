{"version":3,"file":"commonHelpers.js","sources":["../src/js/photoCard.js","../src/js/photoApi.js","../src/main.js"],"sourcesContent":["export default function createPhotoCardMarkup({webformatURL, largeImageURL, tags, likes, views, comments, downloads \n}) {\n    return `    \n    <li class=\"photo_card\">\n    <a class=\"photo_link\" href=\"${largeImageURL}\">\n    <img class=\"photoLarge\" src=\"${webformatURL}\" alt=\"${tags}\"/>\n    \n    <ul class=\"photo_rate\">\n    <li class=\"property-item\">\n      <p class=\"property-title\">Likes</p>\n      <p class=\"property-value\">${likes}</p>\n    </li>\n    <li class=\"property-item\">\n      <p class=\"property-title\">Views</p>\n      <p class=\"property-value\">${views}</p>\n    </li>\n    <li class=\"property-item\">\n      <p class=\"property-title\">Comments</p>\n      <p class=\"property-value\">${comments}</p>\n    </li>\n    <li class=\"property-item\">\n      <p class=\"property-title\">Downloads</p>\n      <p class=\"property-value\">${downloads}</p>\n    </li>\n  </ul>      \n    </a>\n    </li>`;\n}","const BASE_URL = 'https://pixabay.com/api';\nconst API_KEY = '42048563-a2c01b7234988bf152885bd8d';\n\n// https://pixabay.com/api/?key=42048563-a2c01b7234988bf152885bd8d&q=photoWrd&image_type=photo&orientation=horizontal&safesearch=true&page=1&per_page=15\n\nfunction searchPhotoByWrd(photoWrd) {\n    return axios\n    .get(`${BASE_URL}`, {\n        params: {\n            key: API_KEY,\n        q: photoWrd,\n        image_type: 'photo',\n        orientation: 'horizontal',\n        safesearch: true,\n        page: 1,\n        per_page: 15,\n        },\n    }).then(({ data }) => data);\n}\nexport { searchPhotoByWrd };\n\n//     const urlParams = new URLSearchParams({\n//         key: API_KEY,\n//         q: photoWrd,\n//         image_type: 'photo',\n//         orientation: 'horizontal',\n//         safesearch: true,\n//         page: 1,\n//         per_page: 15\n//     }); \n//     return fetch(`${BASE_URL}/?${urlParams}`).then((res) => {\n//         if (!res.ok) {\n//         throw new Error(res.statusText);      \n//         }       \n//         return res.json();\n//     }).catch(error => console.log(error))\n           \n// }  \n","import iziToast from \"izitoast\";\nimport \"izitoast/dist/css/iziToast.min.css\";\nimport SimpleLightbox from \"simplelightbox\";\nimport \"simplelightbox/dist/simple-lightbox.min.css\";\n\nimport createPhotoCardMarkup from \"./js/photoCard.js\";\nimport { searchPhotoByWrd } from \"./js/photoApi.js\";\n\n\nconst refs = {\n    form: document.getElementById('form'),\n    resultContainer: document.getElementById('resultContainer'),\n    loaderContainer: document.querySelector('.loader'),\n    gallery: document.querySelector('.gallery'),\n    loadMoreBtn: document.querySelector('.load-btn'),\n};\nconst hiddenClass = 'is-hidden';\n\nrefs.form.addEventListener('submit', handleSearch);\n\nasync function handleSearch(event) {\n    event.preventDefault();\n\n    const form = event.currentTarget;\n    const photoWrd = form.elements.photoWrd.value;\n         \n    if(!photoWrd) {\n        iziToast.error({\n            message: 'Enter search data',\n            theme: 'dark',\n            messageSize: '16px',\n            messageColor: 'white',\n            backgroundColor: '#ef4040',\n            position: 'topRight',\n            maxWidth: '390px',\n            timeout: 5000,\n        });\n        return;\n    }\n\n    refs.loaderContainer.style.display = 'block';\ntry {\n    await searchPhotoByWrd(photoWrd).then((data) => {   \n        console.log(data);\n       \n       if (data.hits.length === 0) {\n        iziToast.error({\n            message: \"Sorry, there are no images matching your search query. Please try again!\",\n            theme: 'dark',\n            messageSize: '16px',\n            messageColor: 'white',\n            backgroundColor: '#ef4040',\n            position: 'topRight',\n            maxWidth: '390px',\n            timeout: 5000,\n        });   return;\n      }\n       \n    let markup = \"\";    \n      data.hits.forEach((i) => {        \n    //    console.log(i);\n       markup += createPhotoCardMarkup(i);\n       });             \n    refs.gallery.innerHTML = markup;\n    lightbox .refresh();  \n    if (data.hits.length > 0) {\n        refs.loadMoreBtn.classList.remove(hiddenClass); \n    } else {\n        refs.loadMoreBtn.classList.add(hiddenClass); \n    }       \n    })} catch (err) {\n        console.log(err);\n    }\n    finally {               \n        refs.loaderContainer.style.display = 'none';\n      form.reset();\n    }\n}\n\n    //   function handleSearch(event) {\n    //     event.preventDefault();\n    \n    //     const form = event.currentTarget;\n    //     const photoWrd = form.elements.photoWrd.value;\n             \n    //     if(!photoWrd) {\n    //         iziToast.error({\n    //             message: 'Enter search data',\n    //             theme: 'dark',\n    //             messageSize: '16px',\n    //             messageColor: 'white',\n    //             backgroundColor: '#ef4040',\n    //             position: 'topRight',\n    //             maxWidth: '390px',\n    //             timeout: 5000,\n    //         });\n    //         return;\n    //     }\n    \n    //     refs.loaderContainer.style.display = 'block';\n    \n    //     searchPhotoByWrd(photoWrd).then((data) => {   \n    //         console.log(data);\n           \n    //        if (data.hits.length === 0) {\n    //         iziToast.error({\n    //             message: \"Sorry, there are no images matching your search query. Please try again!\",\n    //             theme: 'dark',\n    //             messageSize: '16px',\n    //             messageColor: 'white',\n    //             backgroundColor: '#ef4040',\n    //             position: 'topRight',\n    //             maxWidth: '390px',\n    //             timeout: 5000,\n    //         });   return;\n    //       }\n           \n    //     let markup = \"\";    \n    //       data.hits.forEach((i) => {        \n    //     //    console.log(i);\n    //        markup += createPhotoCardMarkup(i);\n    //        });             \n    //     refs.gallery.innerHTML = markup;\n    //     lightbox .refresh();      \n    //     }).finally(() => {               \n    //         refs.loaderContainer.style.display = 'none';\n    //       form.reset()});}\n\n// function searchPhotoByWrd(photoWrd) {\n//     const urlParams = new URLSearchParams({\n//         key: API_KEY,\n//         q: photoWrd,\n//         image_type: 'photo',\n//         orientation: 'horizontal',\n//         safesearch: true,\n//     }); \n//     return fetch(`${BASE_URL}/?${urlParams}`).then((res) => {\n//         if (!res.ok) {\n//         throw new Error(res.statusText);      \n//         }       \n//         return res.json();\n//     }).catch(error => console.log(error))\n// }  \n\n// function createPhotoCardMarkup({webformatURL, largeImageURL, tags, likes, views, comments, downloads\n// }) {\n//     return `    \n//     <li class=\"photo_card\">\n//     <a class=\"photo_link\" href=\"${largeImageURL}\">\n//     <img class=\"photoLarge\" src=\"${webformatURL}\" alt=\"${tags}\"/>\n    \n//     <ul class=\"photo_rate\">\n//     <li class=\"property-item\">\n//       <p class=\"property-title\">Likes</p>\n//       <p class=\"property-value\">${likes}</p>\n//     </li>\n//     <li class=\"property-item\">\n//       <p class=\"property-title\">Views</p>\n//       <p class=\"property-value\">${views}</p>\n//     </li>\n//     <li class=\"property-item\">\n//       <p class=\"property-title\">Comments</p>\n//       <p class=\"property-value\">${comments}</p>\n//     </li>\n//     <li class=\"property-item\">\n//       <p class=\"property-title\">Downloads</p>\n//       <p class=\"property-value\">${downloads}</p>\n//     </li>\n//   </ul>      \n//     </a>\n//     </li>`;\n// }\n\nconst lightbox = new SimpleLightbox('.gallery a', {\ncaption: true,\ncaptionDelay: 250,\nfadeSpeed: 250,\ncaptionSelector: \"img\",\ncaptionsData: \"alt\",\ncaptionPosition: \"bottom\",}); \n"],"names":["createPhotoCardMarkup","webformatURL","largeImageURL","tags","likes","views","comments","downloads","BASE_URL","API_KEY","searchPhotoByWrd","photoWrd","data","refs","hiddenClass","handleSearch","event","form","iziToast","markup","i","lightbox","err","SimpleLightbox"],"mappings":"6vBAAe,SAASA,EAAsB,CAAC,aAAAC,EAAc,cAAAC,EAAe,KAAAC,EAAM,MAAAC,EAAO,MAAAC,EAAO,SAAAC,EAAU,UAAAC,CAC1G,EAAG,CACC,MAAO;AAAA;AAAA,kCAEuBL;AAAA,mCACCD,WAAsBE;AAAA;AAAA;AAAA;AAAA;AAAA,kCAKvBC;AAAA;AAAA;AAAA;AAAA,kCAIAC;AAAA;AAAA;AAAA;AAAA,kCAIAC;AAAA;AAAA;AAAA;AAAA,kCAIAC;AAAA;AAAA;AAAA;AAAA,UAKlC,CC3BA,MAAMC,EAAW,0BACXC,EAAU,qCAIhB,SAASC,EAAiBC,EAAU,CAChC,OAAO,MACN,IAAI,GAAGH,IAAY,CAChB,OAAQ,CACJ,IAAKC,EACT,EAAGE,EACH,WAAY,QACZ,YAAa,aACb,WAAY,GACZ,KAAM,EACN,SAAU,EACT,CACJ,CAAA,EAAE,KAAK,CAAC,CAAE,KAAAC,CAAM,IAAKA,CAAI,CAC9B,CCTA,MAAMC,EAAO,CACT,KAAM,SAAS,eAAe,MAAM,EACpC,gBAAiB,SAAS,eAAe,iBAAiB,EAC1D,gBAAiB,SAAS,cAAc,SAAS,EACjD,QAAS,SAAS,cAAc,UAAU,EAC1C,YAAa,SAAS,cAAc,WAAW,CACnD,EACMC,EAAc,YAEpBD,EAAK,KAAK,iBAAiB,SAAUE,CAAY,EAEjD,eAAeA,EAAaC,EAAO,CAC/BA,EAAM,eAAc,EAEpB,MAAMC,EAAOD,EAAM,cACbL,EAAWM,EAAK,SAAS,SAAS,MAExC,GAAG,CAACN,EAAU,CACVO,EAAS,MAAM,CACX,QAAS,oBACT,MAAO,OACP,YAAa,OACb,aAAc,QACd,gBAAiB,UACjB,SAAU,WACV,SAAU,QACV,QAAS,GACrB,CAAS,EACD,MACH,CAEDL,EAAK,gBAAgB,MAAM,QAAU,QACzC,GAAI,CACA,MAAMH,EAAiBC,CAAQ,EAAE,KAAMC,GAAS,CAG7C,GAFC,QAAQ,IAAIA,CAAI,EAEbA,EAAK,KAAK,SAAW,EAAG,CAC3BM,EAAS,MAAM,CACX,QAAS,2EACT,MAAO,OACP,YAAa,OACb,aAAc,QACd,gBAAiB,UACjB,SAAU,WACV,SAAU,QACV,QAAS,GACZ,CAAA,EAAK,MACP,CAEH,IAAIC,EAAS,GACXP,EAAK,KAAK,QAASQ,GAAM,CAExBD,GAAUnB,EAAsBoB,CAAC,CACxC,CAAQ,EACJP,EAAK,QAAQ,UAAYM,EACzBE,EAAU,QAAO,EACbT,EAAK,KAAK,OAAS,EACnBC,EAAK,YAAY,UAAU,OAAOC,CAAW,EAE7CD,EAAK,YAAY,UAAU,IAAIC,CAAW,CAElD,CAAK,CAAC,OAASQ,EAAP,CACA,QAAQ,IAAIA,CAAG,CAClB,QACO,CACJT,EAAK,gBAAgB,MAAM,QAAU,OACvCI,EAAK,MAAK,CACX,CACL,CAgGA,MAAMI,EAAW,IAAIE,EAAe,aAAc,CAClD,QAAS,GACT,aAAc,IACd,UAAW,IACX,gBAAiB,MACjB,aAAc,MACd,gBAAiB,QAAQ,CAAE"}